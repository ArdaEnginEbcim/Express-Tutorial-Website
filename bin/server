const app = require("../app");
const debug = require("debug")("http");
const http = require("http");

const port = normalizePort(process.env.PORT || "2732");
app.set("port", port);

const server = http.createServer(app);

server.listen(port);
server.on("error", async (error) => {
  if (error.syscall !== "listen") {
    throw Error;
  } else {
    const bind = typeof port == "string" ? "Pipe " + port : "Port " + port;

    switch (error.code) {
      case "EACCES":
        console.error(bind + " requires elevated privileges");
        process.exit(1);
        break;
      case "EADDRINUSE":
        console.error(bind + " is already in use");
        process.exit(1);
        break;
      default:
        throw error;
    }
  }
});
server.on("listening", async () => {
  const addr = server.address();
  const bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
});

function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }
  if (port >= 0) {
    return port;
  }
  return false;
}
